@page "/fetchdata"
@using RavnChallenge.Shared
@using RavnChallenge.Shared.Dtos 
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var dto in data.Results)
            {
                <tr>
                    <td>@dto.Name</td>
                    <td>@dto.Species from @dto.Homeworld</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;
    private EntityResult<PersonDto> data;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
        data = await Http.GetFromJsonAsync<EntityResult<PersonDto>>("people");
    }

}
